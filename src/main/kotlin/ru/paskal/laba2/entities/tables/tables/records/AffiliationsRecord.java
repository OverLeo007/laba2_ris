/*
 * This file is generated by jOOQ.
 */
package ru.paskal.laba2.entities.tables.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import ru.paskal.laba2.entities.tables.tables.Affiliations;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AffiliationsRecord extends UpdatableRecordImpl<AffiliationsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>laba2.affiliations.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>laba2.affiliations.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>laba2.affiliations.prize_id</code>.
     */
    public void setPrizeId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>laba2.affiliations.prize_id</code>.
     */
    public Integer getPrizeId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>laba2.affiliations.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>laba2.affiliations.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>laba2.affiliations.city</code>.
     */
    public void setCity(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>laba2.affiliations.city</code>.
     */
    public String getCity() {
        return (String) get(3);
    }

    /**
     * Setter for <code>laba2.affiliations.country</code>.
     */
    public void setCountry(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>laba2.affiliations.country</code>.
     */
    public String getCountry() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AffiliationsRecord
     */
    public AffiliationsRecord() {
        super(Affiliations.AFFILIATIONS);
    }

    /**
     * Create a detached, initialised AffiliationsRecord
     */
    public AffiliationsRecord(Integer id, Integer prizeId, String name, String city, String country) {
        super(Affiliations.AFFILIATIONS);

        setId(id);
        setPrizeId(prizeId);
        setName(name);
        setCity(city);
        setCountry(country);
        resetChangedOnNotNull();
    }
}
